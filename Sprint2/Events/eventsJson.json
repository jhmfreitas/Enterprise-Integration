//https: //www.convertjson.com/json-to-xml.htm

//Register new User event
{
    "event":{
        "eventType": "new-user",
        "info": {
            "id": "69c594cfdeeaedd220",
            "email": "user@gmail.com",
            "planType": "pre-paid", //or post-paid -> field used by payment service
            "firstName": "Paulo",
            "lastName": "Neves",
            "balance": "500"
        }
    }
}

//TripCost event
{
    "event": {
        "eventType": "trip-cost",
        "info": {
            "cost": "23",
            "token": "69c594cfdeeaedd220",
            "planType": "pre-paid",
            "operatorName": "Uber",
            "timeStamp": "2020-02-29 20:57:10.294"
        }
    }
}

//Debit event
{
    "event": {
        "eventType": "debit",
        "info": {
            "token": "69c594cfdeeaedd220",
            "planType": "pre-paid",
            "amount": "20"
        }
    }
}

//New event from T0 operators
{
    "event": {
        "eventType": "t0-check-in",
        "operator": "Metro",
        "info": {
            "Token": "t1",
            "Station": "Odivelas",
            "Timestamp": "2020-02-29 18:23:41.278"
        }
    }
}

{
    "event": {
        "eventType": "t0-check-out",
        "operator": "Metro",
        "info": {
            "Token": "t1",
            "Station": "Alameda",
            "Timestamp": "2020-02-29 18:23:47.718"
        }
    }
}

//New event from T1 operators
{
    "event": {
        "eventType": "t1",
        "operator": "Uber",
        "info": {
            "Token": "t2",
            "Price": "20.63",
            "Timestamp": "2020-02-29 19:45:58.638"
        }
    }
}

//New event from T2 operators
{
    "event": {
        "eventType": "t2",
        "operator": "Gira",
        "info": {
            "Token":"t1",
            "Time":"3600", -> just used for user history
            "Price": "12.60",
            "Timestamp":"2020-02-29 20: 57: 10.294"
        }
    }
}

//New Operator event
{
    "event": {
        "eventType": "new-operator",
        "operator": "Carris",
        "info": {
            "operatorType": "t0",
            "baseCost": "2.25" -> "null" -> se for de tipo 1 ou 2
        }
    }
}

//New Discount Event
{
    "event": {
        "eventType": "new-discount",
        "operator": [
            {
                "operator": "Metro"
            }
        ],
        "info": {
            "name": "Dia do Ambiente",
            "discountId": "Metro-1-12",
            "value": "20",
            "beginAt": "2020-06-05 00:00:0.000",
            "endAt": "2020-06-05 23:59:59.999",
            "appliesToPlanType": [
                {
                    "plan": "generalPass"
                },
                {
                    "plan": "pre-paid"
                }
            ]
        }
    }
}


<soapenv:Envelope
    xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/"
    xmlns:oper="http://ec2-3-80-233-61.compute-1.amazonaws.com:9997/operatorManagementService">
    <soapenv:Header/>
    <soapenv:Body>
        <oper:createTripCost>
            <baseCostString>23</baseCostString>
            <operatorName>Metro</operatorName>
            <timeStamp>2020-06-5 20: 57: 10.294</timeStamp>
            <planType>pre-paid</planType>
            <token>jjdgdjs</token>
        </oper:createTripCost>
    </soapenv:Body>
</soapenv:Envelope>

<?xml version='1.0' encoding='UTF-8'?>
<S:Envelope
    xmlns:S="http://schemas.xmlsoap.org/soap/envelope/">
    <S:Body>
        <ns3:createTripCostResponse
            xmlns:ns2="http://ec2-54-196-98-231.compute-1.amazonaws.com:9997/operatorManagementService"
            xmlns:ns3="http://ec2-3-80-233-61.compute-1.amazonaws.com:9997/operatorManagementService">
            <return>Success</return>
        </ns3:createTripCostResponse>
    </S:Body>
</S:Envelope>